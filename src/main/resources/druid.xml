<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd">
        
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
        init-method="init" destroy-method="close">
        <!-- 数据库基本信息配置 -->
        <property name="driverClassName" value="#{props['jdbc.driverClassName']}" />
        <property name="url" value="#{props['jdbc.url']}" />
        <property name="username" value="#{props['jdbc.username']}" />
        <property name="password" value="#{props['jdbc.password']}" />        
        <!-- 初始化连接数量 -->
        <property name="initialSize" value="#{props['druid.initialSize']}" />
        <!-- 最大并发连接数 -->
        <property name="maxActive" value="#{props['druid.maxActive']}" />
        <!-- 最大空闲连接数 -->
        <property name="maxIdle" value="#{props['druid.maxIdle']}" />
        <!-- 最小空闲连接数 -->
        <property name="minIdle" value="#{props['druid.minIdle']}" />
        <!-- 配置获取连接等待超时的时间 -->     
        <property name="maxWait" value="#{props['druid.maxWait']}" />
        <!-- 超过时间限制是否回收 -->
        <property name="removeAbandoned" value="#{props['druid.removeAbandoned']}" />
        <!-- 超过时间限制多长； -->
        <property name="removeAbandonedTimeout" value="#{props['druid.removeAbandonedTimeout']}" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="#{props['druid.timeBetweenEvictionRunsMillis']}" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="#{props['druid.minEvictableIdleTimeMillis']}" />
        <!-- 用来检测连接是否有效的sql，要求是一个查询语句-->
        <property name="validationQuery" value="#{props['druid.validationQuery']}" />
        <!-- 申请连接的时候检测 -->
        <property name="testWhileIdle" value="#{props['druid.testWhileIdle']}" />
        <!-- 申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能 -->
        <property name="testOnBorrow" value="#{props['druid.testOnBorrow']}" />
        <!-- 归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能  -->
        <property name="testOnReturn" value="#{props['druid.testOnReturn']}" />
        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <!-- mysql 不支持 poolPreparedStatements-->
<!--         <property name="poolPreparedStatements" value="#{props['druid.poolPreparedStatements']}" />      -->
<!--         <property name="maxPoolPreparedStatementPerConnectionSize" value="#{props['druid.maxPoolPreparedStatementPerConnectionSize']}" /> -->
        <!--属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：                 
                                    监控统计用的filter:stat
                                   日志用的filter:log4j
                                    防御SQL注入的filter:wall 
        -->
        <property name="filters" value="#{props['druid.filters']}" />       
    </bean>
</beans>